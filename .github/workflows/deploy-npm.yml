name: Deploy to Production (npm)

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run type check
      run: npm run type-check
      
    - name: Run linting
      run: npm run lint
      
    - name: Build application
      run: npm run build
      env:
        NODE_ENV: production
        # Füge hier deine Umgebungsvariablen hinzu
        # DATABASE_URL: ${{ secrets.DATABASE_URL }}
        # JWT_SECRET: ${{ secrets.JWT_SECRET }}
        # CUSTOM_KEY: ${{ secrets.CUSTOM_KEY }}
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: .next/
        retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: .next/
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install production dependencies
      run: npm ci --only=production
      
    - name: Deploy to server via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          # Navigiere zum Projektverzeichnis
          cd ${{ secrets.PROJECT_PATH }}
          
          # Stoppe den aktuellen Prozess (falls vorhanden)
          pm2 stop intrusion-hacker-adventure || true
          pm2 delete intrusion-hacker-adventure || true
          
          # Git pull für die neuesten Änderungen
          git pull origin main
          
          # Installiere Dependencies
          npm ci --only=production
          
          # Starte die Anwendung mit PM2
          pm2 start npm --name "intrusion-hacker-adventure" -- start
          
          # Speichere PM2-Konfiguration
          pm2 save
          
          # Zeige Status
          pm2 status
          
    - name: Health check
      run: |
        # Warte kurz und führe dann einen Health Check durch
        sleep 30
        curl -f ${{ secrets.HEALTH_CHECK_URL }} || exit 1 